version: '3.8'

services:
  # MongoDB Database
  db:
    image: mongo:4.2
    container_name: db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - '27017:27017'
    volumes:
      - ./data/mongo:/data/db
    networks:
      - app-network

  # Backend (Server)
  server:
    build:
      context: .
      dockerfile: ./Server/Dockerfile
    image: 192.168.33.10:8083/nodemongoapp:latest
    container_name: back
    restart: always
    ports:
      - '5000:5000'
    environment:
      MONGO_URI: mongodb://root:example@db:27017/?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      FACEBOOK_APP_ID: ${FACEBOOK_APP_ID}
      FACEBOOK_APP_SECRET: ${FACEBOOK_APP_SECRET}
      GOOGLE_CALENDAR_CLIENT_ID: ${GOOGLE_CALENDAR_CLIENT_ID}
      GOOGLE_CALENDAR_CLIENT_SECRET: ${GOOGLE_CALENDAR_CLIENT_SECRET}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      VITE_API_URL: http://client:3000
    depends_on:
      - db
    networks:
      - app-network

  # Client (CoreUI React)
  client:
    build:
      context: .
      dockerfile: ./Client/Dockerfile
    image: ${REGISTRY}/client:latest
    container_name: client
    restart: always
    ports:
      - '3000:80'
    environment:
      VITE_API_URL: http://back:5000
    networks:
      - app-network

  # Admin (Mantis React)
  admin:
    build:
      context: .
      dockerfile: ./Admin/Dockerfile
    image: ${REGISTRY}/admin:latest
    container_name: admin
    restart: always
    ports:
      - '4000:80'
    environment:
      VITE_API_URL: http://back:5000
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
